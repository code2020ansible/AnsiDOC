---
- hosts: localhost
  gather_facts: false
  vars_files:
    - ../answerfile.yml
  tasks:
    - name: Create distributed switch in vCenter
      vmware_dvswitch:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        datacenter_name: "{{ vcenter.datacenter }}"
        validate_certs: false
        switch_name: "{{ vds.name }}"
        mtu: "{{ vds.mtu }}"
        uplink_quantity: "{{ vds.uplinks }}"
        discovery_proto: "{{ vds.discovery_proto }}"
        discovery_operation: "{{ vds.discovery_operation }}"
        state: present

    - name: Create Management port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.management_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ physicalESX.vlan }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vMotion port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.vmotion_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + vmotion }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vSAN port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.vsan_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + vsan }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create IP Storage port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.ipstorage_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + ipstorage }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create SVM-Management port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.svmmanagement_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + ipstorage }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create vmnetwork port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.vmnetwork_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_id: "{{ pod + vmnetwork }}"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create Uplink1 port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.uplink1_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Create Uplink2 port group
      vmware_dvs_portgroup:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        portgroup_name: "{{ vds.uplink2_pg }}"
        switch_name: "{{ vds.name }}"
        vlan_trunk: true
        vlan_id: "0-4094"
        num_ports: 8
        portgroup_type: earlyBinding
        state: present

    - name: Migrate uplinks to the VDS
      vmware_dvs_host:
        hostname: "{{ vcenter.ip }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        validate_certs: false
        esxi_hostname: "{{ item.value.fqdn }}"
        switch_name: "{{ vds.name }}"
        vmnics:
          - vmnic1
          - vmnic2
        state: present
      with_dict: "{{ vESX }}"

    - name: Migrate vmk0 to the VDS
      vmware_migrate_vmk:
        hostname: "{{ vcenter.ip }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        device: 'vmk0'
        current_switch_name: 'vSwitch0'
        current_portgroup_name: 'Management Network'
        migrate_switch_name: "{{ vds.name }}"
        validate_certs: False
        migrate_portgroup_name: "{{ vds.management_pg }}"
      with_dict: "{{ vESX }}"

    - name: Create vmk1 for vMotion
      vmware_vmkernel:
        hostname: "{{ vcenter.ip }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        state: present
        portgroup_name: "{{ vds.vmotion_pg }}"
        dvswitch_name: "{{ vds.name }}"
        validate_certs: False
        enable_vmotion: true
        network:
          type: 'static'
          ip_address: "{{ item.value.vmotion_ip }}"
          subnet_mask: "{{ item.value.vmotion_mask }}"
          tcpip_stack: vmotion
      with_dict: "{{ vESX }}"

    - name: Create vmk2 for vSAN
      vmware_vmkernel:
        hostname: "{{ vcenter.ip }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        state: present
        enable_vsan: true
        portgroup_name: "{{ vds.vsan_pg }}"
        dvswitch_name: "{{ vds.name }}"
        validate_certs: False
        network:
          type: 'static'
          ip_address: "{{ item.value.vsan_ip }}"
          subnet_mask: "{{ item.value.vsan_mask }}"
      with_dict: "{{ vESX }}"
      
    - name: Create vmk3 for IP Storage
      vmware_vmkernel:
        hostname: "{{ vcenter.ip }}"
        esxi_hostname: "{{ item.value.fqdn }}"
        username: "{{ vcenter.user }}"
        password: "{{ vcenter.password }}"
        state: present
        portgroup_name: "{{ vds.ipstorage_pg }}"
        dvswitch_name: "{{ vds.name }}"
        validate_certs: False
        network:
          type: 'static'
          ip_address: "{{ item.value.ipstorage_ip }}"
          subnet_mask: "{{ item.value.ipstorage_mask }}"
      with_dict: "{{ vESX }}"
      
    - name: Remove the standard switch from the ESXi hosts
      vmware_vswitch:
        hostname: '{{ item.value.fqdn }}'
        username: '{{ item.value.username }}'
        password: '{{ item.value.password }}'
        validate_certs: no
        switch: 'vSwitch0'
        state: absent
      with_dict: "{{ vESX }}"
